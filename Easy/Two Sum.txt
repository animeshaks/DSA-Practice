1. Two Sum - https://leetcode.com/problems/two-sum/

Sol - O(n^2)
	class Solution {
	public:
	    vector<int> twoSum(vector<int>& nums, int target) {
	        vector<int> ans;
	        for(int i=0;i<nums.size();i++){
	            for(int j=i+1;j<nums.size();j++){
	                if((nums[i]+nums[j])==target){
	                    ans.push_back(i);
	                    ans.push_back(j);
	                    break;
	                }
	            }
	        }
	        return ans;
	    }
	};

Sol - O(n)
	class Solution {
	public:
	    vector<int> twoSum(vector<int>& nums, int target) {
	        unordered_map<int,int> m;
	        for(int i=0;i<nums.size();i++){
	            if(m.find(nums[i]) != m.end())
	                return {m[nums[i]],i};
	            else
	                m[target-nums[i]] = i;
	        }
	        return {};
	    }
	};
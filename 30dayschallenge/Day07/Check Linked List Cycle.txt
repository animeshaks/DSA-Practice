141. Linked List Cycle - https://leetcode.com/problems/linked-list-cycle/

Floyed's Algorithm to check loops in a Linked List:-

    public class Solution {
        public boolean hasCycle(ListNode head) {
            if(head == null || head.next == null)
                return false;
            
            ListNode slow = head;
            ListNode fast = head;
            
            while(slow != null && fast != null){
                fast = fast.next;
                if(fast != null)
                    fast = fast.next;
                slow = slow.next;
                if(slow == fast)
                    return true;
            }
            return false;
        }
    }
Power of Two - https://leetcode.com/problems/power-of-two/

Basic Approach :-
	Time Complexity: O(logn)
	Space Complexity: O(1)
	class Solution {
	public:
	    bool isPowerOfTwo(int n) {
	        while(n!=0){
	            if(n==1)
	                return true;
	            if(n%2 != 0)
	                return false;
	            n = n/2;
	            
	        }
	        return false;
	    }

	    ////////////////////////// OTHER WAY ///////////////////////////////////
	    bool isPowerOfTwo(int n) {
	    	if(n==0) 
	    		return false;
	        while(n%2==0) 
	        	n/=2;
	        return n==1;
	    }
	};


Recursion :- (Very Slow)
	class Solution {
	public:
	    bool isPowerOfTwo(int n) {
	        if(n==1 || n==2)
	            return true;
	        if(n%2 != 0 || n==0)
	            return false;
	        return isPowerOfTwo(n/2);
	    }
	};

BIT MANIPULATION :- 
	class Solution {
	public:
	    bool isPowerOfTwo(int n) {
	        if(n<=0) return false;
	        return ((n&(n-1))==0);
	    }
	};